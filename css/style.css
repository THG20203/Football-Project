/* Brighter blue */
/* blue */
/* FONT VARIABLES */
/* For general body */
/* For titles */
/* RESPONSIVE BREAKPOINTS */
* {
  margin: 0;
  padding: 0; }

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  box-sizing: border-box;
  font-size: 62.5%;
  /* 1rem = 10px, 10px/16px = 62.5% */ }

body {
  font-family: "Nunito", sans-serif;
  color: #101d2c;
  line-height: 1.6;
  min-height: 100vh; }

.container {
  display: grid;
  /* comments for the grid-template-rows */
  grid-template-rows: 15rem 10rem calc(95vh - 20rem) 80vh min-content repeat(2, min-content);
  grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
  /* AFTER NOTES */ }
  @media only screen and (max-width: 87.5em) {
    .container {
      grid-template-rows: 15rem 10rem 120vh calc(100vh - 20rem) calc( 100vh - 20rem); } }

.features {
  /* features go from center-start to center-end - beginning to end of centre 8 grid */
  grid-column: center-start / center-end;
  margin: 5rem;
  /* making features grid item a grid container */
  display: grid;
  align-content: center;
  /* making columns for this 'sub grid'. */
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  grid-gap: 6rem;
  /* align text to be at the top of the boxes within the grid */
  align-items: start;
  /* large being 87.5em - 1400px */ }
  @media only screen and (max-width: 87.5em) {
    .features {
      margin: 5rem 0;
      grid-row: 7 / 8; } }

.feature {
  /* Need to make the feature elements themselves individual grids */
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-row-gap: 1.5rem;
  grid-column-gap: 2.5rem; }
  .feature__icon {
    width: 4.5rem;
    height: 4.5rem;
    grid-row: 1 / span 2;
    transform: translateY(-1rem); }

.footer {
  background-color: #0a19a1;
  /* goes all the way from one end to the other end full bleed section */
  grid-column: full-start / full-end; }
  @media only screen and (max-width: 87.5em) {
    .footer {
      grid-row: 10 /11; } }

.banner {
  /* col-end 4 - halfway across the page */
  grid-column: full-start / col-end 4; }
  @media only screen and (max-width: 87.5em) {
    .banner {
      /* want it to span whole page on smaller devices */
      grid-column: full-start / full-end; } }

.slideshow {
  height: 100%;
  /* failsafe to hide excess banner images */
  overflow: hidden; }
  .slideshow__wrapper {
    /* display images in a row using flex */
    display: flex;
    /* wrapper of 200vw because 4 images which are 50vw each - each image take up 1/4 of wrapper */
    width: 200vw;
    height: 100%;
    /* because in the keyframes below we are manipulating the slideshow wrapper, we need to define the position
    as relative i.e. to move the wrapper left */
    position: relative;
    /* define animation property for wrapper as slideshow with the duration of 15 seconds */
    animation: slideshow 20s infinite; }
    @media only screen and (max-width: 87.5em) {
      .slideshow__wrapper {
        width: 400vw;
        animation: slideshowSmallViewport 20s infinite; } }

.slide__image {
  height: 100%;
  /* want the width to be half the viewport hence 50vw */
  width: 50vw;
  /* image keeps its aspect ratio (so not stretched) and fills the given dimension. Image = clipped to fit */
  object-fit: cover;
  position: relative; }
  @media only screen and (max-width: 87.5em) {
    .slide__image {
      /* want images to span whole viewport width smaller devices */
      width: 100vw; } }

.slide__image::after {
  height: 100%;
  width: 50vw;
  background: linear-gradient(rgba(249, 247, 246, 0.7), rgba(249, 247, 246, 0.7));
  z-index: 100; }

/* keyframes percentages? = percentage of the animation duration */
@keyframes slideshow {
  /* in the timeframe of the animation we don't want to image to move for a while - so need to define the 
left position as 0. This is for 0 to 5% of the animation */
  0% {
    left: 0; }
  5% {
    left: 0; }
  /* after 0-5% of animation time, want image to be moved to the left by its width - 50vw */
  /* this'll mean first image is entirely hidden and the second one is displayed */
  10% {
    left: -50vw; }
  /* second image displayed from 10% to 30% */
  30% {
    left: -50vw; }
  /* need we need to hide second image and display the third one - hence -100vw */
  35% {
    left: -100vw; }
  /* third image displayed from 35% to 55% */
  55% {
    left: -100vw; }
  /* need to hide third image and display fourth one - hence -150vw */
  60% {
    left: -150vw; }
  /* fourth image displayed from 60% to 80% */
  80% {
    left: -150vw; }
  85% {
    left: 0vw; }
  100% {
    left: 0vw; } }

/* remember- each image is now 100vw, so need to move -100vw to the left to go to next image etc */
@keyframes slideshowSmallViewport {
  0% {
    left: 0; }
  5% {
    left: 0; }
  10% {
    left: -100vw; }
  30% {
    left: -100vw; }
  35% {
    left: -200vw; }
  55% {
    left: -200vw; }
  60% {
    left: -300vw; }
  80% {
    left: -300vw; }
  85% {
    left: 0vw; }
  100% {
    left: 0vw; } }

.slide__btn {
  width: 1.5rem;
  height: 1.5rem;
  background-color: #f9f7f6;
  border: 0.2rem solid #aaa;
  border-radius: 50%;
  cursor: pointer;
  outline: none;
  position: absolute;
  top: 90%;
  /* perfect positioning horizontally */
  transform: translateX(-50%);
  /* want to put the buttons on top of the slideshow */
  z-index: 2;
  /* position absolute will put one button on top of another so need to move them individually */
  /* remember the quarter of the way across the page is 25% so want 22, 24, 26 and 28 of the way across 
    the viewport, to center it albeit in a slideshow spanning halfway the viewport 50vw */ }
  @media only screen and (max-width: 87.5em) {
    .slide__btn {
      top: 80%; } }
  @media only screen and (max-width: 87.5em) {
    .slide__btn {
      /* make buttons bigger on smaller devices so they're easier to click on phones */
      width: 1.8rem;
      height: 1.8rem; } }
  .slide__btn--1 {
    left: 22%; }
    @media only screen and (max-width: 87.5em) {
      .slide__btn--1 {
        left: 38%; } }
  .slide__btn--2 {
    left: 24%; }
    @media only screen and (max-width: 87.5em) {
      .slide__btn--2 {
        left: 46%; } }
  .slide__btn--3 {
    left: 26%; }
    @media only screen and (max-width: 87.5em) {
      .slide__btn--3 {
        left: 54%; } }
  .slide__btn--4 {
    left: 28%; }
    @media only screen and (max-width: 87.5em) {
      .slide__btn--4 {
        left: 62%; } }

/* first of all need to make sure its obvious which button we are focusing on when click it */
.slide__btn:focus {
  background-color: #0a19a1; }

.slide__btn--1:focus ~ .slideshow__wrapper {
  /* in order to stop animation - need to write animation none */
  animation: none;
  /* when we focus on first button, we need to display first image */
  left: 0; }

.slide__btn--2:focus ~ .slideshow__wrapper {
  /* in order to stop animation - need to write animation none */
  animation: none;
  /* when we focus on second button, we need to display second image */
  left: -50vw; }
  @media only screen and (max-width: 87.5em) {
    .slide__btn--2:focus ~ .slideshow__wrapper {
      /* viewport width of images is npw 100vw - so to click through each one need -100vw */
      left: -100vw; } }

.slide__btn--3:focus ~ .slideshow__wrapper {
  /* in order to stop animation - need to write animation none */
  animation: none;
  /* when we focus on third button, we need to display third image */
  left: -100vw; }
  @media only screen and (max-width: 87.5em) {
    .slide__btn--3:focus ~ .slideshow__wrapper {
      left: -200vw; } }

.slide__btn--4:focus ~ .slideshow__wrapper {
  /* in order to stop animation - need to write animation none */
  animation: none;
  /* when we focus on fourth button, we need to display fourth image */
  left: -150vw; }
  @media only screen and (max-width: 87.5em) {
    .slide__btn--4:focus ~ .slideshow__wrapper {
      left: -300vw; } }

.team {
  grid-column: col-start 8 / full-end;
  display: grid; }

.table__container {
  display: grid;
  align-content: center;
  justify-content: center;
  text-align: center; }

.table__title {
  padding: 3rem 0; }

.table__content {
  /* collapse all table borders into single border */
  border-collapse: collapse;
  border-radius: 1rem 1rem 0 0;
  /* table rows still have square borders - overflow hidden ensures border radius set on table will 
    display nicely */
  overflow: hidden;
  /* stop text dropping a line */
  white-space: nowrap;
  box-shadow: 0 0.5rem 1.5rem #101d2c; }

.table__header {
  background-color: #f9f7f6;
  color: #101d2c;
  font-size: 1.4rem;
  border-bottom: 0.1rem solid #aaa; }

.table__row {
  font-size: 1.4rem; }
  .table__row:hover {
    cursor: pointer; }
  .table__row--THG {
    background-color: white; }
    .table__row--THG:hover {
      background: linear-gradient(#0c22e8, #0a19a1, #0c22e8);
      color: #f9f7f6; }
  .table__row--Lions {
    background-color: #f9f7f6; }
    .table__row--Lions:hover {
      background: linear-gradient(#b31900, #801504, #b31900);
      color: #f9f7f6; }
  .table__row--EGFC {
    background-color: white;
    border-bottom: 1px solid #aaa; }
    .table__row--EGFC:hover {
      background: linear-gradient(#101d2c, black, #101d2c);
      color: #f6be00; }

th,
td {
  padding: 1.5rem; }

.players {
  background-color: #0a19a1;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='18' viewBox='0 0 100 18'%3E%3Cpath fill='%230c22e8' fill-opacity='0.4' d='M61.82 18c3.47-1.45 6.86-3.78 11.3-7.34C78 6.76 80.34 5.1 83.87 3.42 88.56 1.16 93.75 0 100 0v6.16C98.76 6.05 97.43 6 96 6c-9.59 0-14.23 2.23-23.13 9.34-1.28 1.03-2.39 1.9-3.4 2.66h-7.65zm-23.64 0H22.52c-1-.76-2.1-1.63-3.4-2.66C11.57 9.3 7.08 6.78 0 6.16V0c6.25 0 11.44 1.16 16.14 3.42 3.53 1.7 5.87 3.35 10.73 7.24 4.45 3.56 7.84 5.9 11.31 7.34zM61.82 0h7.66a39.57 39.57 0 0 1-7.34 4.58C57.44 6.84 52.25 8 46 8S34.56 6.84 29.86 4.58A39.57 39.57 0 0 1 22.52 0h15.66C41.65 1.44 45.21 2 50 2c4.8 0 8.35-.56 11.82-2z'%3E%3C/path%3E%3C/svg%3E");
  display: grid;
  padding: 3rem;
  align-content: center;
  justify-content: center;
  grid-row-gap: 2rem;
  justify-items: center;
  /* MEDIA QUERY - when width of screen is 87.5rem ($bp-largest) */ }
  @media only screen and (max-width: 87.5em) {
    .players {
      grid-column: full-start / full-end;
      grid-row: 6 / 7; } }
  .players__list {
    display: grid;
    /* first column for images, second for the text */
    grid-template-columns: min-content max-content;
    grid-column-gap: 2rem;
    grid-row-gap: 3vh;
    align-items: center;
    justify-items: center;
    /* largest being 87.5em - 1400px */
    /* large being 62.5em - 1000px */
    /* medium being 50em - 800px */ }
    @media only screen and (max-width: 87.5em) {
      .players__list {
        grid-template-columns: repeat(3, min-content max-content); } }
    @media only screen and (max-width: 62.5em) {
      .players__list {
        grid-column-gap: 4rem; } }
    @media only screen and (max-width: 50em) {
      .players__list {
        grid-template-columns: min-content max-content;
        grid-row-gap: 2vh;
        justify-items: start; } }
  .players__img {
    /* width: 150px */
    width: 8rem;
    border-radius: 50%;
    display: block;
    /* large being 62.5em - 1000px */ }
    @media only screen and (max-width: 62.5em) {
      .players__img {
        width: 6rem; } }
  .players__goals {
    margin-top: -3px;
    /* large being 62.5em - 1000px */
    color: #f9f7f6; }
    @media only screen and (max-width: 62.5em) {
      .players__goals {
        margin-top: 0px; } }
  .players__name {
    /* large being 62.5em - 1000px */ }
    @media only screen and (max-width: 62.5em) {
      .players__name {
        line-height: 1.7rem; } }

.progress-timeline__container {
  background-color: #0a19a1;
  display: grid;
  grid-column: full-start / full-end; }

.nav {
  /* inner being the links and the hamburger menu */ }
  .nav__container {
    /* ensure the background-color of the overall bar is grey */
    background-color: #f9f7f6;
    /* make second nav a grid */
    display: grid;
    /* ensure second nav is full width across the page */
    grid-column: full-start / full-end; }
  .nav__badge {
    /* take the first column of the second nav grid */
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    /* width of badge */
    width: 7rem;
    /* height of the badge */
    height: 8rem;
    /* set margin from edge of page */
    margin: 1rem; }
  .nav__content {
    /* content being list and menu toggle */
    grid-column: 2 / 10;
    display: grid;
    /* align list items vertically in middle */
    align-content: center; }
    @media only screen and (max-width: 62.5em) {
      .nav__content {
        /* make navbar from beginning to end on smaller devices so can center it */
        grid-column: 1 / 10;
        /* ensure the links don't push too far down the page on smaller viewports */
        grid-row: 1 / 2;
        /* put the list above the rest of content */
        z-index: 3;
        /* make z-index value work*/
        position: relative;
        /* hide the links from view on smaller viewports if hamburger isn't clicked */
        opacity: 0;
        /* links will be present if width is not 0 */
        width: 0;
        transition: all 0.8s; } }
  .nav__list {
    display: grid;
    /* align items on page horizontally */
    justify-items: center;
    /* organise list items in columns with a minimum width of 10rem, max width 1fr */
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    /* get rid of bullet points */
    list-style: none;
    /* ensure font is right font for titles */
    font-family: "Lato", sans-serif; }
    @media only screen and (max-width: 62.5em) {
      .nav__list {
        /* make it one column taking up 100% of the width of to the content which was 1 / 10 column */
        grid-template-columns: 100%; } }
  .nav__link {
    text-transform: uppercase;
    /* get rid of list bullet points */
    text-decoration: none;
    font-size: 1.8rem;
    /* blue on the grey background for desktop */
    color: #0a19a1; }
    @media only screen and (max-width: 62.5em) {
      .nav__link {
        /* links font size increase */
        font-size: 4rem;
        /* padding top and bottom of the links */
        padding: 1rem 0;
        /* smaller devices - blue background - so links need to be white */
        color: #f9f7f6; } }
  .nav__checkbox {
    /* checkbox hack - hide checkbox tick for the hamburger menu */
    display: none; }
  .nav__button {
    /* put it to the right on the viewport */
    grid-column: 9 / 10;
    grid-row: 1 / 2;
    /* hide hamburger on larger viewports */
    display: none;
    /* set margin from edge of page */
    margin: 1rem;
    /*set width and height of hamburger */
    width: 8rem;
    height: 8rem;
    border: none;
    cursor: pointer;
    text-align: center;
    flex-direction: column;
    /* WHY? - remember the flex-direction has now been set as column so align-items will now be horizontally */
    align-items: center;
    /* WHY? - remember the flex-direction has now been set as column so justify-content will now be vertically */
    justify-content: center;
    background-color: #0c22e8;
    position: relative;
    /* move toggle to the end horizontally*/
    justify-self: end; }
    @media only screen and (max-width: 62.5em) {
      .nav__button {
        /* only want to display the hamburger icon on smaller devices */
        display: flex;
        /* needs to be at the top above background on transform and general content */
        z-index: 3;
        background-color: #0a19a1; } }
    .nav__button:hover {
      background-color: #0a19a1; }
  .nav__background {
    grid-column: 9 / 10;
    grid-row: 1 / 2;
    display: none;
    /* make slightly smaller than the actual button with a slightly bigger margin */
    margin: 1.5rem;
    height: 6rem;
    width: 6rem;
    background-image: radial-gradient(#0c22e8, #f9f7f6);
    /* needs to be be above general content but below the hamburger */
    z-index: 2;
    transition: transform 0.8s; }
    @media only screen and (max-width: 62.5em) {
      .nav__background {
        /* make background visible rather than not with display none on smaller devices */
        display: flex;
        /* push the background to end of the container horizontally */
        justify-self: end; } }
  .nav__checkbox:checked ~ .nav__background {
    /* scale the background on click - sibling of checkbox - background */
    transform: scale(120); }
  .nav__checkbox:checked ~ .nav__content {
    /* when click on checkbox - want sibling element content (i.e. the links be visible cause opacity and width was set as 0) */
    opacity: 1;
    width: 100%; }
  .nav__icon {
    position: relative; }
    .nav__icon, .nav__icon::before, .nav__icon::after {
      /* dimensions for lines on the hamburger menu */
      width: 4rem;
      height: 2px;
      background-color: #f9f7f6;
      display: flex; }
    .nav__icon::before, .nav__icon::after {
      content: '';
      position: absolute;
      left: 0;
      transition: all 0.2s; }
    .nav__icon::before {
      /* move the before element up vertically hence minus rem */
      top: -1.2rem; }
    .nav__icon::after {
      /* move the after element down vertically hence positive rem */
      top: 1.2rem; }
  .nav__button:hover .nav__icon::before {
    /* effects on hover - moving the lines closer to the middle span */
    top: -0.8rem; }
  .nav__button:hover .nav__icon::after {
    /* effects on hover - moving the lines closer to the middle span */
    top: 0.8rem; }
  .nav__checkbox:checked + .nav__button .nav__icon {
    background-color: transparent; }
  .nav__checkbox:checked + .nav__button .nav__icon::before {
    top: 0;
    transform: rotate(135deg); }
  .nav__checkbox:checked + .nav__button .nav__icon::after {
    top: 0;
    transform: rotate(-135deg); }

.story {
  /* Set the styles for images */ }
  .story__pictures {
    background-color: #0c22e8;
    grid-column: full-start / col-end 4;
    background-image: linear-gradient(rgba(10, 25, 161, 0.7), rgba(12, 34, 232, 0.7)), url(../img/graffiti/stadium-stand.png);
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    display: grid;
    grid-template-rows: repeat(6, 1fr);
    grid-template-columns: repeat(6, 1fr);
    align-items: center;
    /* MEDIA QUERY - when width of screen is 62.5rem ($bp-large) */ }
    @media only screen and (max-width: 87.5em) {
      .story__pictures {
        grid-column: full-start / full-end;
        grid-row: 8 / 9;
        padding: 5rem; } }
  .story__img--1 {
    width: 100%;
    grid-row: 2 / 6;
    grid-column: 1 / 5;
    /* large being 62.5em - 1000px */ }
    @media only screen and (max-width: 87.5em) {
      .story__img--1 {
        grid-column: 1 / 4;
        grid-row: 1 / -1;
        height: 100%;
        width: 100%; } }
  .story__img--2 {
    width: 110%;
    z-index: 1;
    grid-row: 1 / 5;
    grid-column: 4 / 7;
    /* large being 62.5em - 1000px */ }
    @media only screen and (max-width: 87.5em) {
      .story__img--2 {
        grid-row: 1 / -1;
        width: 100%;
        height: 80%; } }
  .story__content {
    background-color: #f9f7f6;
    grid-column: col-start 5 / full-end;
    padding: 5rem 8vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    /* large being 62.5em - 1000px */ }
    @media only screen and (max-width: 87.5em) {
      .story__content {
        grid-column: full-start / full-end;
        grid-row: 9 / 10; } }
  .story__text {
    margin-bottom: 4rem; }

.heading-1, .heading-2, .heading-3, .heading-4 {
  font-family: "Lato", sans-serif;
  font-weight: 400; }

.heading-1 {
  font-size: 4rem;
  color: #0a19a1;
  line-height: 1; }

.heading-2 {
  font-size: 3rem;
  line-height: 1; }
  .heading-2--light {
    color: #aaa; }

.heading-3 {
  font-size: 2rem;
  text-transform: uppercase;
  color: #101d2c; }

.heading-4 {
  font-size: 1.8rem; }
  .heading-4--light {
    color: #aaa; }

.paragraph-text {
  font-size: 1.5rem; }
  @media only screen and (max-width: 62.5em) {
    .paragraph-text {
      font-size: 0.75rem; } }
  .paragraph-text--uppercase {
    text-transform: uppercase; }
  .paragraph-text--light {
    color: #f9f7f6; }

.btn {
  background-color: #0c22e8;
  color: #f9f7f6;
  border: none;
  border-radius: 0;
  font-family: "Lato", sans-serif;
  font-size: 1.5rem;
  text-transform: uppercase;
  padding: 1.5rem 2rem;
  cursor: pointer;
  transition: all 0.2s; }
  .btn:hover {
    background-color: #0a19a1; }

.mb-sm {
  margin-bottom: 2rem; }

.mb-md {
  margin-bottom: 3rem; }

.mb-lg {
  margin-bottom: 4rem; }

.mb-hg {
  margin-bottom: 8rem; }

.video-sale__container {
  grid-column: col-end 7 / full-end;
  display: grid;
  grid-template-rows: 40rem calc(100vh - 60rem); }

.player {
  max-width: 100%;
  display: grid;
  background: #101d2c; }

video {
  display: grid;
  width: 100%;
  height: auto; }

.shirt-sale__container {
  grid-row: 2 /3;
  display: grid;
  /* align title horizontally */
  justify-content: center;
  background-image: linear-gradient(rgba(10, 25, 161, 0.95), rgba(249, 247, 246, 0.1)); }

.shirt-sale__image {
  transition: all 0.5s;
  width: 20vw;
  cursor: pointer; }

.sea-serpent__container {
  grid-column: col-end 4 / col-end 7;
  display: grid;
  grid-template-rows: 40rem calc(95vh - 60rem); }

.sea-serpent__content {
  grid-row: 1 /2;
  background-image: linear-gradient(rgba(12, 34, 232, 0.3), rgba(10, 25, 161, 0.9)), url(../img/sea-serpent.png);
  background-repeat: no-repeat;
  /* first value = horizontal position. second = vertical. Top left corner = 0% 0%, 
    right corner = 100% 100% */
  background-position: 50% 50%;
  background-size: cover;
  overflow: hidden;
  filter: blur(0.05rem); }
  @media only screen and (max-width: 62.5em) {
    .sea-serpent__content {
      grid-column: full-start / full-end; } }

.sea-serpent__ripple {
  width: 50rem;
  height: 50rem;
  display: flex;
  align-items: center;
  justify-content: center; }

.sea-serpent__ripple span {
  position: absolute;
  transform: rotateX(80deg);
  box-sizing: border-box;
  /* border styles for the ripples */
  border-bottom: 0.3rem solid #0374a4;
  border-left: 0.3rem solid #0374a4;
  border-right: 0.3rem solid #0374a4;
  border-radius: 50%;
  translate: -10rem 9rem;
  animation: ripple 5s linear infinite;
  animation-delay: calc(-0.5s * var(--i)); }

.sea-serpent__ripple:nth-child(2) span {
  animation: ripple2 5s linear infinite;
  translate: -10rem -41rem;
  /* border styles for the ripples */
  border-bottom: 0.5rem solid #00577b;
  border-left: 0.5rem solid #00577b;
  border-right: 0.5rem solid #00577b;
  animation-delay: calc(-0.5s * var(--i)); }

.sea-serpent__ripple:nth-child(3) span {
  animation: ripple3 5s linear infinite;
  border-bottom: 0.3rem solid #043950;
  border-left: 0.3rem solid #043950;
  border-right: 0.3rem solid #043950;
  translate: -10rem -91rem;
  animation-delay: calc(-0.5s * var(--i)); }

@keyframes ripple {
  0% {
    width: 11rem;
    height: 11rem; }
  50% {
    opacity: 1; }
  100% {
    width: 40rem;
    height: 40rem;
    opacity: 0; } }

@keyframes ripple2 {
  0% {
    width: 12rem;
    height: 12rem; }
  50% {
    opacity: 1; }
  100% {
    width: 45rem;
    height: 45rem;
    opacity: 0; } }

@keyframes ripple3 {
  0% {
    width: 11rem;
    height: 11rem; }
  50% {
    opacity: 1; }
  100% {
    width: 50rem;
    height: 50rem;
    opacity: 0; } }

.cards__container {
  grid-row: 2 /3;
  /* display flex makes them alinged in a row */
  display: flex;
  background-color: #101d2c;
  /* align items centerally vertically - within flex box */
  align-items: center; }

.panel {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  border-radius: 1rem;
  /* don't want the height to be 100% of container */
  height: 90%;
  /* width of an initial value of 0.5 for each of them */
  flex-grow: 0.5;
  /* flex-basis ensure flexbox ensure columns are distributed evenly */
  flex-basis: 0;
  /*  in cases where the width of the column content is forced (for example with image width or white-space: 
  nowrap), the solution is to set min-width: 0 */
  min-width: 0;
  /* positioning the text */
  display: flex;
  align-items: start;
  justify-content: center;
  /* seperate the boxes slightly */
  margin: 0.5rem;
  transition: flex 0.7s ease-in;
  cursor: pointer; }
  .panel__text {
    /* want to make text invisible unless clicking on panel */
    opacity: 0;
    margin-top: 0.5vh; }
  .panel__one {
    background-image: linear-gradient(rgba(16, 29, 44, 0.3), rgba(10, 25, 161, 0.3)), url(../img/panel/player-flag.png); }
  .panel__two {
    background-image: linear-gradient(rgba(16, 29, 44, 0.6), rgba(10, 25, 161, 0.6)), url(../img/panel/huddle.png); }
  .panel__three {
    background-image: linear-gradient(rgba(16, 29, 44, 0.3), rgba(10, 25, 161, 0.3)), url(../img/panel/membership-badge.png); }
  .panel__four {
    background-image: linear-gradient(rgba(16, 29, 44, 0.6), rgba(10, 25, 161, 0.6)), url(../img/panel/corner-flag.png); }
  .panel__five {
    background-image: linear-gradient(rgba(16, 29, 44, 0.5), rgba(10, 25, 161, 0.5)), url(../img/panel/goalkeeper.png); }

.panel.active {
  flex: 3; }

.panel.active p {
  opacity: 1;
  /* to slow down the opacity changes */
  /* opacity to take 0.3 secondads, ease-in effect, 04.s delay */
  transition: opacity 0.3s ease-in 0.4s; }

@media only screen and (max-width: 62.5em) {
  .panel:nth-of-type(4),
  .panel:nth-of-type(5) {
    display: none; } }
